'''
Created on 19 aug 2014

@author: HaNaK0
'''

#constants
AOBJECT = 'Object'

class ActionStack(object):
    '''
    a stack to contain actions
    '''
    def __init__(self, workspace):
        self.workspace = workspace
        self.stack = []
        self.undos = 0
        
    def actionCreate(self, posGridX, posGridY, oType = AOBJECT):
        if self.undos > 0:
            del self.stack[len(self.stack) - self.undos:]
            
        self.stack.append(ActionCreate(self.workspace, posGridX, posGridY, oType))
        
    def undo(self):
        if self.stack and self.undos < len(self.stack):
            self.stack[len(self.stack) -1 - self.undos].undo
            self.undos += 1
        else:
            print("Nothing more to undo!")
            
            
    def redo(self):
        if self.stack and self.undos > 0:
            self.stack[len(self.stack) -1 - self.undos].redo
            self.undos -= 1
        else:
            print("nothing to re do")
            
        


class ActionCreate(object):
    '''
    instantiated when anything is created in the canvas
    '''
    def __init__(self, workspace, posGridX, posGridY, oType):
        self.workspace = workspace
        self.posGridX = posGridX
        self.posGridY = posGridY
        self.oType = oType
        self.active = True
        
        workspace.itemGrid.add(posGridX, posGridY, objType = oType)
    
    def undo(self):
        if self.active:
            self.workspace.itemGrid.remove(self.posGridX, self.posGridY)
            self.active = False
    
    def redo(self):
        if not self.active:
            self.workspace.itemGrid.add(self.posGridX, self.posGridY, objType = self.oType)
            self.active = True